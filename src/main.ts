import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import * as bodyParser from 'body-parser';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // üì¶ –£–≤–µ–ª–∏—á–∏—Ç—å –ª–∏–º–∏—Ç —Ä–∞–∑–º–µ—Ä–∞ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
  app.use(bodyParser.json({ limit: '20mb' }));
  app.use(bodyParser.urlencoded({ limit: '20mb', extended: true }));

  // ‚úÖ CORS
  app.enableCors({
    origin: ['http://localhost:3000', 'http://localhost:3001', 'https://aetz-client.vercel.app'],
    methods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'],
    allowedHeaders: [
      'Content-Type',
      'Authorization',
      'Accept',
      'Origin',
      'X-Requested-With',
      'Access-Control-Request-Method',
      'Access-Control-Request-Headers'
    ],
    exposedHeaders: ['Content-Range', 'X-Content-Range'],
    credentials: true,
    maxAge: 3600,
    preflightContinue: false,
    optionsSuccessStatus: 204
  });

  // –í–∫–ª—é—á–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
  app.useGlobalPipes(new ValidationPipe({
    transform: true,
    whitelist: true,
    forbidNonWhitelisted: true,
  }));

  // üìö Swagger
  const config = new DocumentBuilder()
    .setTitle('AETZ API')
    .setDescription(`
      <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é AETZ</h2>
      <p>–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π.</p>
      <h3>–ö–∞–∫ –Ω–∞—á–∞—Ç—å:</h3>
      <ol>
        <li>–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ <code>/auth/login</code></li>
        <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω</li>
        <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Authorize" –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω</li>
      </ol>
      <h3>–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:</h3>
      <ul>
        <li>üîê <b>–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</b> - –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</li>
        <li>üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</li>
        <li>üì¶ <b>–ú–∞—Ç–µ—Ä–∏–∞–ª—ã</b> - —Ä–∞–±–æ—Ç–∞ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏</li>
        <li>üìã <b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</b> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏</li>
        <li>üßÆ <b>–†–∞—Å—á–µ—Ç—ã</b> - —Ä–∞–±–æ—Ç–∞ —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏</li>
        <li>‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> - —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</li>
        <li>üí± <b>–í–∞–ª—é—Ç—ã</b> - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª—é—Ç</li>
        <li>üîå <b>–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä—ã</b> - —Ä–∞–±–æ—Ç–∞ —Å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞–º–∏</li>
        <li>üè≠ <b>–ë–ú–ó</b> - —Ä–∞–±–æ—Ç–∞ —Å –ë–ú–ó</li>
        <li>‚ö° <b>–†–£</b> - —Ä–∞–±–æ—Ç–∞ —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏</li>
      </ul>
    `)
    .setVersion('1.0')
    .addTag('–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è', '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏')
    .addTag('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å–∏—Å—Ç–µ–º—ã')
    .addTag('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–†–∞–±–æ—Ç–∞ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞–º–∏')
    .addTag('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤')
    .addTag('–†–∞—Å—á–µ—Ç—ã', '–†–∞–±–æ—Ç–∞ —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏ –∏ –∏—Ö –≥—Ä—É–ø–ø–∞–º–∏')
    .addTag('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
    .addTag('–í–∞–ª—é—Ç—ã', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª—é—Ç –∏ –∫—É—Ä—Å–æ–≤')
    .addTag('–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä—ã', '–†–∞–±–æ—Ç–∞ —Å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞–º–∏')
    .addTag('–ë–ú–ó', '–†–∞–±–æ—Ç–∞ —Å –±–ª–æ–∫–∞–º–∏ –º–æ–¥—É–ª—å–Ω—ã—Ö –∑–¥–∞–Ω–∏–π')
    .addTag('–†–£', '–†–∞–±–æ—Ç–∞ —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'JWT',
        description: '–í–≤–µ–¥–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ: Bearer <token>',
        in: 'header',
      },
      'access-token',
    )
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      docExpansion: 'none',
      filter: true,
      showRequestDuration: true,
      syntaxHighlight: {
        theme: 'monokai'
      },
      tryItOutEnabled: true,
      requestInterceptor: (req) => {
        req.credentials = 'include';
        return req;
      },
      defaultModelsExpandDepth: 3,
      defaultModelExpandDepth: 3,
      displayRequestDuration: true,
      showExtensions: true,
      showCommonExtensions: true,
      tagsSorter: 'alpha',
      operationsSorter: 'alpha',
    },
    customSiteTitle: 'AETZ API Documentation',
    customfavIcon: 'https://aetz-client.vercel.app/favicon.ico',
    customJs: [
      'https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.15.5/swagger-ui-bundle.min.js',
      'https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.15.5/swagger-ui-standalone-preset.min.js',
    ],
    customCssUrl: [
      'https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.15.5/swagger-ui.min.css',
      'https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.15.5/swagger-ui-standalone-preset.min.css',
      'https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/4.15.5/swagger-ui.css',
    ],
  });

  await app.listen(process.env.PORT || 3001);
}
bootstrap();
